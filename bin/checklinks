#!/usr/bin/env bash
##Created by Edward "edge226" Tunnah.

## Read the pkgbuild variables into the script to be able to work with
## them to gather needed information.
unset searchdir fail
source /etc/lbf/lbf.conf ## Read the config file for lbf to get basic parameters if needed.
source /etc/lbf/lbf.usage ## Read the usage file to be able to output help for this program.

OPTIND=1 ## make sure the optargs are reset for getopts

while getopts "n:pvh" opt; do
    case "$opt" in
        n)    name=$OPTARG;;
        p)    pretend="yes";;
        v)    verbose="yes";;
        h)      printf '%s\n' "$checklinks_usage"; exit 0;;
        \?)     printf '%s\n' "$checklinks_usage" >&2; exit 1;;
    esac
done

if [[ "$name" != "" ]]; then
  printf '\n%s %s\n' "name variable is set to:" "$name"
  searchdir=$( find "$gitrepodir" -name "$name" -type d -print0 )
  printf '\n%s %s\n' "searchdir has been set to:" "$searchdir"
fi

if [[ "$searchdir" != "" ]]; then ## only move into the directory if specified.
  cd "$searchdir" || exit
fi

if [[ ! -f ./PKGBUILD ]]; then
  printf '%s\n' "This PKGBUILD file does not exist."
  printf '%s\n' "$checklinks_usage" >&2; exit 1
elif [[ -f ./PKGBUILD ]]; then
  source ./PKGBUILD ## Read the PKGBUILD file.
else
  printf '%s\n' "$checklinks_usage" >&2; exit 1
fi

if [[ ! "$pretend" = "yes" ]]; then ## Only check if they do not want pretend mode. For this program it is practically useless.

  fail="0" ## Set an appropriate default fail parameter.
  ## set locations of other log files.
  slog="./$pkgname-$pkgver-$pkgrel-link-verify-success.log"
  flog="./$pkgname-$pkgver-$pkgrel-link-verify-fail.log"
  printf "Checking sources for %s version %s\n" "$pkgname" "$pkgver-$pkgrel"
  for url in "${source[@]}"; do ## $source is an array that comes from the PKGBUILD.
    if [[ -f "$url" ]]; then ## If the entry in the sources is a file and exists.
      if [[ "$verbose" = "yes" ]]; then
        printf "%s exists!\n" "$url"
      elif [[ ! "$verbose" = "yes" ]]; then
        printf "%s exists!\n" "$url" >> "$slog" ## Print if it exists!
      fi
    else ## Everything else should be a URL that is parsed through wget.
      if wget --spider -q "$url"; then ## This will end up outputting to a log file in lucid-build.
        if [[ "$verbose" = "yes" ]]; then
          printf "%s exists!\n" "$url"
        elif [[ ! "$verbose" = "yes" ]]; then
          printf "%s exists!\n" "$url" >> "$slog" ## Print if it exists!
          fi
      else
        if [[ "$verbose" = "yes" ]]; then
          printf "%s does not exist\n" "$url"
        elif [[ "$verbose" = "yes" ]] || [[ ! "$verbose" = "yes" ]]; then
          printf "%s does not exist\n" "$url" >> "$flog" ## Print if it does not exist!
        fi
        fail="1" ## sets fail.
      fi
    fi
  done

fi

if [[ "$fail" = "1" ]]; then
  exit 1 ## reports back that all links did not work properly.
else
  exit 0
fi
