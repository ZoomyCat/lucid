#!/usr/bin/env bash
##Created by Edward "edge226" Tunnah.

## Read the pkgbuild variables into the script to be able to work with
## them to gather needed information.

source /etc/lbf/lbf.conf ## Read the config file for lbf to get basic parameters if needed.
source /etc/lbf/lbf.usage ## Read the usage file to be able to output help for this program.

OPTIND=1 ## make sure the optargs are reset for getopts

while getopts "s:pvh" opt; do
    case "$opt" in
        s)		searchdir=$OPTARG;;
        p)		pretend="yes";;
        v)		verbose="yes";;
        h)      printf '%s\n' "$checklinks_usage"; exit 0;;
        \?)     printf '%s\n' "$checklinks_usage" >&2; exit 1;;
    esac
done

cd "$searchdir"
source PKGBUILD ## Read the PKGBUILD file.

if [ ! "$pretend" = "yes" ]; then

	fail="0"
	slog="./$pkgname-$pkgver-$pkgrel-link-verify-success.log"
	flog="./$pkgname-$pkgver-$pkgrel-link-verify-fail.log"
	printf "Checking sources for %s version %s\n" "$pkgname" "$pkgver-$pkgrel"
	for url in "${source[@]}"; do ## $source is an array that comes from the PKGBUILD.
		if [[ -f "$url" ]]; then ## If the entry in the sources is a file and exists.
			printf "%s exists!\n" "$url" >> "$slog" ## Print that it exists.
		else ## Everything else should be a URL that is parsed through wget.
			if wget --spider -q "$url"; then ## This will end up outputting to a log file in lucid-build.
				if [ "$verbose" = "yes" ]; then
					printf "%s exists!\n" "$url"
				else
					printf "%s exists!\n" "$url" >> "$slog" ## Print if it exists!
			    fi
			else
				if [ "$verbose" = "yes" ]; then
					printf "%s does not exist\n" "$url"
				else
					printf "%s does not exist\n" "$url" >> "$flog" ## Print if it does not exist!
				fi
				fail="1"
			fi
		fi
	done

fi

if [ "$fail" = "1" ]; then
	exit 1
else
	exit 0
fi
