#!/usr/bin/env bash
##Created by Edward "edge226" Tunnah.

## imports program usage from config files.
source /etc/lb/lb.conf
source /etc/lb/lb.usage

## The main stuff.

OPTIND=1 ## make sure the optargs are reset for getopts

## This case statement sets the build parameters of the program for
## which architecture to use.
while getopts "36d:hmt:r:b:vClp" opt; do
    case "$opt" in
        d)  searchdir=$OPTARG;;
        6)  buildarch="x86_64"
                compilecmd="lucid-$buildarch-build"
                buildroot="/var/lib/lucidbuild/lucid-$buildarch"
                printf "The build has been set to 64 bit.\n";;
        3)  buildarch="i686"
                compilecmd="lucid-$buildarch-build"
                buildroot="/var/lib/lucidbuild/lucid-$buildarch"
                printf "The build has been set to 32 bit.\n";;
        m)  compilecmd="lucid-multilib-build"
                buildarch="x86_64"
                buildroot="/var/lib/lucidbuild/lucid-$buildarch"
                printf "The build has been set to multilib.\n";;
        t)  repodir=$OPTARG;;
        r)      repo=$OPTARG;;
        b)      branch=$OPTARG;;
        p)      pretend="yes";;
        C)      cleanbuild="yes";;
        l)      checklinks="no";;
        v)      verbose="yes";;
        h)      printf '%s\n' "$lb_usage"; exit 0;;
        \?)     printf '%s\n' "$lb_usage" >&2; exit 1;;
    esac
done

## Check for root! If the user is not running the script as root advise
## that root is required to operate this script and then drop out. If
## the script is run as root then continue.
if [ "$EUID" != "0" ]; then
    printf "error: This script must be run as root.\n"
    exit 1
fi

if [ "$cleanbuild" = "yes" ]; then
    cleanbuildroot -b "$buildroot" ## if the -C flag is passed to lb this will clean
fi  ## the build root before the program continues find PKGBUILDs.

    ## Finally find the pkgbuilds and build them!
    find "$searchdir" -name PKGBUILD -type f -execdir "$buildcmd" "$compilecmd" "$buildarch" "$repodir/$branch/$buildarch/$repo" "$verbose" "$checklinks" "$pretend" "$buildroot" \;

