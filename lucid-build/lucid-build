#!/usr/bin/env bash
##Created by Edward "edge226" Tunnah.

## This is the script that actually builds the packages in the build
## area and then moves everything out of the respective build areas into
## a staging area to be processed. This script should always be run
## through the shorter lb command instead of manually since it will always
## pass the parameters in the same way.

## Deal with incoming parameters here.
build="$1" ## The program that starts the actual build.
archtype="$2" ## The architecture. ie x86_64 or i686.
repo="$3" ## location for the repository to go. Packages go here.

## Set parameters for the program to be able to move all the resulting
## packages where they need to go.
pkg=".pkg.tar.xz" ## This mixed with $archtype allows me to know the pkg.
pkgname="$(basename $(pwd))" ## Grab the package name via the source build dir.
pkgdir="$repo/packages/"	## The location of the compiled binary packages.
srcdir="$repo/sources/$pkgname/" ## The source tarbal location.
logdir="$repo/logs/$pkgname/" ## The debug and log location.

## Create the appropriate repository directories.
mkdir -p "$pkgdir" "$logdir" "$srcdir"

## Do the build.
printf "Building %s for the %s architecture.\n" "$pkgname" "$archtype"
printf "The packages, sources and log directory for this build are: \n"
printf "%s\n%s\n%s\n" "$pkgdir" "$srcdir" "$logdir"
"$build" > "$logdir$$build-$pkgname.log"

## Copy the Sources, Packages and logs to the appropriate directories.
## also has the benefitted effect of cleaning the working directory also
## add some for loops with conditional globs to check and see if these files exist then move them. This will
## get rid of the harmless error that happens when these files do not exist.
printf "Moving files into their appropriate places.\n"
printf "Getting a few errors here is expected.\n"
mv *debug* "$logdir" ## Copying this before $pkg makes sure all debug files have been moved to the correct place.
mv *.log "$logdir" ## This does contain some tar files so I copy it before $pkg. This leaves only $pkg and $src info left
mv *"$archtype$pkg" "$pkgdir" ## Copy the pkg into the repo.
mv *"multilib$pkg" "$pkgdir" ## Copy multilib packages into the repo, make sure to use -m through lb.
mv *"any$pkg" "$pkgdir" ## Copy any files for all architectures were compiled move them into the repo.
mv *.tar.* "$srcdir" ## Copy all remaining tarballs into the src directory.

printf "Moving build information from $build stage in case of failure.\n"
if [ "$archtype" = "x86_64" ]; then
	cp -R /var/lib/manjarobuild/unstable-x86_64/*/build "$logdir"
elif [ "$archtype" = "i686" ]; then
	cp -R /var/lib/manjarobuild/unstable-i686/*/build "$logdir"
fi
