# Maintainer: artoo <flower_of_life@gmx.net>
# Contributor: williamh <williamh@gentoo.org>

_Icron1=cronie-1.3-initd
_Icron2=anacron-1.0-initd
_Ccrypt=1.0.6-dmcrypt.confd
_Icrypt=1.5.1-dmcrypt.rc
_Idbus=dbus.initd
_Inscd=nscd
_Cdm=device-mapper.conf-1.02.22-r3
_Idm1=device-mapper.rc-2.02.105-r2
_Idm2=dmeventd.initd-2.02.67-r1
_Clvm=lvm.confd-2.02.28-r2
_Ilvm1=lvm.rc-2.02.105-r2
_Ilvm2=lvm-monitoring.initd-2.02.105-r2
_Ilvm3=lvmetad.initd-2.02.105-r2
_Cmdadm=mdadm.confd
_Imdadm=mdadm.rc
_Idhcpcd=dhcpcd.initd
_Cmdraid=mdraid.confd
_Imdraid=mdraid.rc

_pkgname="openrc"

_gentoo_uri="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86"
_src_uri="http://dev.gentoo.org/~williamh/dist"
_net_uri="http://dev.gentoo.org/~robbat2/distfiles"

_udev="udev-init-scripts"
_uver=26

_net="netifrc"
_nver=0.2.4

pkgbase=openrc-base
pkgname=('openrc-core'
		'cronie-openrc'
		'cryptsetup-openrc'
		'dbus-openrc'
		'dhcpcd-openrc'
		'device-mapper-openrc'
		'glibc-openrc'
		'inetutils-openrc'
		'lvm2-openrc'
		'mdadm-openrc')
pkgdesc="Gentoo's universal init system, udev enabled."
pkgver=0.12.4
pkgrel=20
pkgdesc="Gentoo's universal init system, udev enabled."
arch=('i686' 'x86_64')
url="http://www.gentoo.org/proj/en/base/openrc/"
license=('GPL2')
groups=('openrc' 'openrc-base')
makedepends=('inetutils' 'psmisc' 'udev>=186')
conflicts=('initscripts'
		'systemd-sysvcompat'
		'openrc'
		'openrc-git'
		'openrc-sysvinit')
source=("${_src_uri}/${_pkgname}-${pkgver}.tar.bz2"
		"${_src_uri}/${_udev}-${_uver}.tar.bz2"
		"${_net_uri}/${_net}-${_nver}.tar.bz2"
		"${_pkgname}.logrotate"
		"${_gentoo_uri}/sys-apps/kmod/files/kmod-static-nodes"
		"${_gentoo_uri}/sys-process/cronie/files/${_Icron1}"
		"${_gentoo_uri}/sys-process/cronie/files/${_Icron2}"
		"${_gentoo_uri}/sys-fs/cryptsetup/files/${_Ccrypt}"
		"${_gentoo_uri}/sys-fs/cryptsetup/files/${_Icrypt}"
		"${_gentoo_uri}/sys-apps/dbus/files/${_Idbus}"
		"${_gentoo_uri}/sys-libs/glibc/files/${_Inscd}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Cdm}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Idm1}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Idm2}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Clvm}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Ilvm1}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Ilvm2}"
		"${_gentoo_uri}/sys-fs/lvm2/files/${_Ilvm3}"
		"${_gentoo_uri}/sys-fs/mdadm/files/${_Cmdadm}"
		"${_gentoo_uri}/sys-fs/mdadm/files/${_Imdadm}"
		"${_gentoo_uri}/sys-fs/mdadm/files/${_Cmdraid}"
		"${_gentoo_uri}/sys-fs/mdadm/files/${_Imdraid}"
		"${_gentoo_uri}/net-misc/dhcpcd/files/${_Idhcpcd}"
		'inetutils.confd'
		'inetutils.initd')

_shebang='s|#!/sbin/runscript|#!/usr/bin/runscript|'
_runpath='s|/var/run|/run|g'
_binpath=('s|/usr/sbin|/usr/bin|g' 's|/sbin|/usr/bin|g')

_base_args=(SYSCONFDIR=/etc)
# Source the /etc/os-release file for branding
if [ -f /etc/os-release ]; then
	. /etc/os-release
	_base_args+=(BRANDING="$NAME")
else
	_base_args+=(BRANDING='Unknown Linux')
fi
_base_args+=(PREFIX=/usr)
_base_args+=(SBINDIR=/usr/bin)

_rc_args=( "${_base_args[@]}" )
_rc_args+=(LIBEXECDIR=/usr/lib/rc)
_rc_args+=(MKSELINUX=no)
_rc_args+=(MKPAM=pam)
_rc_args+=(MKTERMCAP=ncurses)
_rc_args+=(MKNET=no)

_net_args=( "${_base_args[@]}" )
_net_args+=(LIBEXECDIR=/usr/lib/${_net})

_pkgver() {
	date +%Y%m%d
}

prepare(){
	cd "${srcdir}/${_pkgname}-${pkgver}"
	sed -e "${_binpath[1]}" -i support/sysvinit/inittab
	sed -i 's:0444:0644:' mk/sys.mk
}

build(){
	# make netifrc
	cd "${srcdir}/${_net}-${_nver}"
	make "${_net_args[@]}"

	# make openrc
	cd "${srcdir}/${_pkgname}-${pkgver}"
	make "${_rc_args[@]}"
}

_install_udev(){
	cd "${srcdir}/${_udev}-${_uver}"
	make DESTDIR="${pkgdir}" install
	# fix shebang & path to udevd
	local _bin='s|/sbin/udevd|/usr/bin/udevd|g'
	sed -e "${_shebang}" -e "${_bin}" -i "${pkgdir}/etc/init.d/udev"
	sed -e "${_shebang}" -i "${pkgdir}/etc/init.d/udev-mount"

	cd "${srcdir}/${_pkgname}-${pkgver}"
	ln -sf "/etc/init.d/udev" "${pkgdir}/etc/runlevels/sysinit/udev"
	ln -sf "/etc/init.d/udev-mount" "${pkgdir}/etc/runlevels/sysinit/udev-mount"

	# provided by netifrc>=0.2.2
	rm ${pkgdir}/usr/lib/udev/net.sh
	rm ${pkgdir}/usr/lib/udev/rules.d/90-network.rules
}

_install_netifrc(){
	cd "${srcdir}/${_net}-${_nver}"
	make DESTDIR="${pkgdir}" "${_net_args[@]}" install
	install -Dm 644 "${srcdir}/${_net}-${_nver}/doc/net.example" "${pkgdir}/etc/conf.d/net"
	# create runlevel
	ln -sf "/etc/init.d/net.lo" "${pkgdir}/etc/runlevels/boot/net.lo"
}

_install_kmod(){
	cd "${srcdir}/${_pkgname}-${pkgver}"
	install -Dm755 "${srcdir}/kmod-static-nodes" "${pkgdir}/etc/init.d/kmod-static-nodes"
	# fix shebang
	sed -e "${_shebang}" -i "${pkgdir}/etc/init.d/kmod-static-nodes"
	# create runlevel
	ln -sf "/etc/init.d/kmod-static-nodes" "${pkgdir}/etc/runlevels/sysinit/kmod-static-nodes"
}

package_openrc-core() {
	depends=('inetutils'
		'psmisc'
		'sysvinit'
		'udev>=186')
	optdepends=('dhcpcd-openrc: dhcpcd initscript')
	conflicts=('openrc'
			'openrc-git'
			'initscripts'
			'systemd-sysvcompat')
	backup=('etc/rc.conf'
		'etc/conf.d/consolefont'
		'etc/conf.d/keymaps'
		'etc/conf.d/hostname'
		'etc/conf.d/modules'
		'etc/conf.d/net'
		'etc/conf.d/hwclock')
	install=${_pkgname}.install

	cd "${srcdir}/${_pkgname}-${pkgver}"
	make DESTDIR="${pkgdir}" "${_rc_args[@]}" install
	# inittab
	install -m644 "${srcdir}/${_pkgname}-${pkgver}/support/sysvinit/inittab" "${pkgdir}/etc/inittab"
	# logrotate
	install -Dm644 "${srcdir}/${_pkgname}.logrotate" "${pkgdir}/etc/logrotate.d/${_pkgname}"
	# enable unicode & logger
	sed -e 's/#unicode="NO"/unicode="YES"/' -e 's/#rc_logger="YES"/rc_logger="YES"/' -i "${pkgdir}/etc/rc.conf"

	# udev
	_install_udev

	# netifrc
	_install_netifrc

	# kmod-static-nodes
	_install_kmod
}

package_cronie-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC cronie init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	groups=('openrc' 'openrc-base' 'openrc-desktop')
	depends=('openrc-core' 'cronie')
	provides=('openrc-cron')
	conflicts=('fcron'
			'fcron-openrc'
			'openrc'
			'openrc-git'
			'openrc-arch-services-git'
			'initscripts'
			'systemd-sysvcompat')
	backup=('etc/init.d/cronie')
	install=cronie.install

	install -Dm755 "${srcdir}/${_Icron1}" "${pkgdir}/etc/init.d/cronie"
	install -Dm755 "${srcdir}/${_Icron2}" "${pkgdir}/etc/init.d/anacron"

	for f in ${pkgdir}/etc/init.d/*; do
		sed -e "${_shebang}" -e "${_binpath[0]}" -e "${_runpath}" -i $f
	done
}

package_dhcpcd-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC dhcpcd init script"
	url="https://github.com/udeved/pkgbuilds"
	groups=('openrc' 'openrc-base' 'openrc-desktop')
	arch=('any')
	depends=('openrc-core' 'dhcpcd')
	install=dhcpcd.install

	install -Dm755 "${srcdir}/${_Idhcpcd}" "${pkgdir}/etc/init.d/dhcpcd"

	sed -e "${_shebang}" -e "${_binpath[1]}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/dhcpcd"
}

package_dbus-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC dbus init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	groups=('openrc' 'openrc-base' 'openrc-desktop')
	depends=('openrc-core' 'dbus')
	install=dbus.install

	install -Dm755 "${srcdir}/${_Idbus}" "${pkgdir}/etc/init.d/dbus"

	local _p1='s|dbus.pid|dbus/pid|g'
	sed -e "${_shebang}" -e "${_runpath}" -e "${_p1}" -i "${pkgdir}/etc/init.d/dbus"
}

package_device-mapper-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC device-mapper init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	depends=('openrc-core' 'device-mapper')
	backup=('etc/conf.d/device-mapper')
	install=device-mapper.install

	install -Dm755 "${srcdir}/${_Cdm}" "${pkgdir}/etc/conf.d/device-mapper"
	install -Dm755 "${srcdir}/${_Idm1}" "${pkgdir}/etc/init.d/device-mapper"
	install -Dm755 "${srcdir}/${_Idm2}" "${pkgdir}/etc/init.d/dmeventd"

	for f in ${pkgdir}/etc/init.d/*; do
		sed -e "${_shebang}" -e "${_binpath[1]}" -e "${_runpath}" -i $f
	done
}

package_cryptsetup-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC cryptsetup init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	depends=('cryptsetup' 'device-mapper-openrc')
	backup=('etc/conf.d/dmcrypt')
	install=cryptsetup.install

	install -Dm755 "${srcdir}/${_Ccrypt}" "${pkgdir}/etc/conf.d/dmcrypt"
	install -Dm755 "${srcdir}/${_Icrypt}" "${pkgdir}/etc/init.d/dmcrypt"

	sed -e "${_shebang}" -e "${_binpath[0]}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/dmcrypt"
}

package_glibc-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC nscd init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	depends=('openrc-core' 'glibc')
	optdepends=('openldap-openrc'
			'bind-openrc')
	install=glibc.install

	install -Dm755 "${srcdir}/${_Inscd}" "${pkgdir}/etc/init.d/nscd"

	sed -e "${_shebang}" -e "${_binpath[0]}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/nscd"
}

package_inetutils-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC ftpd init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	depends=('openrc-core' 'inetutils')
	backup=('etc/conf.d/ftpd')
	install=inetutils.install

	install -Dm755 "${srcdir}/inetutils.confd" "${pkgdir}/etc/conf.d/ftpd"
	install -Dm755 "${srcdir}/inetutils.initd" "${pkgdir}/etc/init.d/ftpd"
}

package_lvm2-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC lvm2 init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	depends=('lvm2' 'device-mapper-openrc')
	backup=('etc/conf.d/lvm')
	install=lvm2.install

	install -Dm755 "${srcdir}/${_Clvm}" "${pkgdir}/etc/conf.d/lvm"
	install -Dm755 "${srcdir}/${_Ilvm1}" "${pkgdir}/etc/init.d/lvm"
	install -Dm755 "${srcdir}/${_Ilvm2}" "${pkgdir}/etc/init.d/lvm-monitoring"
	install -Dm755 "${srcdir}/${_Ilvm3}" "${pkgdir}/etc/init.d/lvmetad"

	for f in ${pkgdir}/etc/init.d/*; do
		sed -e "${_shebang}" -e "${_binpath[1]}" -e "${_runpath}" -i $f
	done
}

package_mdadm-openrc() {
	pkgver=$(_pkgver)
	pkgrel=1
	pkgdesc="OpenRC mdadm init script"
	url="https://github.com/udeved/pkgbuilds"
	arch=('any')
	depends=('openrc-core' 'mdadm')
	optdepends=('bind-openrc')
	backup=('etc/conf.d/mdadm')
	install=mdadm.install

	install -Dm755 "${srcdir}/${_Cmdadm}" "${pkgdir}/etc/conf.d/mdadm"
	install -Dm755 "${srcdir}/${_Imdadm}" "${pkgdir}/etc/init.d/mdadm"

	install -Dm755 "${srcdir}/${_Cmdraid}" "${pkgdir}/etc/conf.d/mdraid"
	install -Dm755 "${srcdir}/${_Imdraid}" "${pkgdir}/etc/init.d/mdraid"

	sed -e "${_shebang}" -e "${_runpath}" -i "${pkgdir}/etc/init.d/mdadm"
	sed -e "${_shebang}" -i "${pkgdir}/etc/init.d/mdraid"
}
sha256sums=('c4edda2fff4b613f50b9cc265bb457a9ab0170fbc1fe7c26eccd4a5d63b2625c'
            'eff4cd581cb5d57a1fa09772f9f82a37d9a33a3828f0b7e988278a974864d203'
            '9b53eb3c8e6e80cd4073a34f911a28055c28b9f7a9f119a397002b0de7ac0691'
            '0b44210db9770588bd491cd6c0ac9412d99124c6be4c9d3f7d31ec8746072f5c'
            '078b07581e63b5113cef9e85da7d5b53e1fbad91d793f7fa8b7188b364689b0e'
            '292a7b20fe33bd027357475fea6aa1194afa7e5c1c47a85299db945b9d1c847e'
            '7ff283ee8b492929d33831461b72e872fe9d3a98344cf39af442f575875b0132'
            '0c30e081c0b8f879964ae49735f10b05a1d92f4f481042851958860945e13271'
            '02faf27470ea0e50b764c923786724847e77dfdf9680a50cc202546cad2bf02f'
            '98e37b8b6ed25004e48c5855d74c9361eea06d3fee13cefcc0ed10ccf452aa01'
            '6165db3a2fcb251d4f3655c0461e018ce9c92a37f7f22a8fd2b75178b5435bc8'
            '57777904f12a35617e5a4193c964ebb32396452487fd02353e71e16e7b46bc22'
            '036b6de05e6cbd921a667d6fc6b01d30c8f9b720e1a0d0e2453ecd62d32573fb'
            '0c051388991ba69afbf2f6baf36ba227d7c26fc8f0d7588d8de76d9a74886d79'
            '28370c089c39c248d7ded0960b8d8a9256bada44d44c22ce3cec87d512ef6844'
            'a5754ffa0a05a0c29a9f6b5acf1b21dd313581fd6156c1ef722dc620e0114676'
            'd7655cadd3a3a9d3683a540413365310ca9503c38fd21a9bfccec40630ca72f1'
            '60accb4b6114753232f2db0adf3fc3f46d4459bfedf79b888801a13c55d79fa9'
            'ec55674955af7a31da51b8b72b599e8519809287dad796a9b16155bcba471b79'
            '3073b14619cb7b2c99c33f2d6cfd1e59ce5557899bffebaa65fa52f3caffadc7'
            '1b7918c4bdd024607bcb49d7cea0a77cb70502d2fbb4dbe07024bb5b5699c8e0'
            '73303ec32b7010c7f6d4fd66dde1a5baea07e73c79d3e516dce31000abdb4089'
            '72b42c9939fda3fb56666813513029ed36194c1708bddce06bcb3e131e547492'
            '59fe1aa68c43f4958afc397a0d6b35da263a20fcdb457005123a0d64cb1f7477'
            '055b63d6703cac6ed92a8e015377b5977acc7964f1bfcf7d683b92c53e521d7c')
